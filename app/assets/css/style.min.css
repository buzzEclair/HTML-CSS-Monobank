/*!
 * fastshell
 * Fiercely quick and opinionated front-ends
 * https://HosseinKarami.github.io/fastshell
 * @author Hossein Karami
 * @version 1.0.5
 * Copyright 2020. MIT licensed.
 */
.clear:after,.clear:before{content:" ";display:table}.clear{*zoom:1}.clear:after{clear:both}*{box-sizing:border-box;font-smoothing:antialiased;text-rendering:optimizeLegibility;color:#aaa}a{text-decoration:none}p,ul{padding:0;margin:0}ul li{list-style:none}h2{font-size:18px;margin:0;padding:0}.mb-light{font-family:nexa-light}.mb-bold{font-family:nexa-bold}.mb-open-sans-300{font-family:Open Sans,sans-serif;font-weight:300}.mb-open-sans-400{font-family:Open Sans,sans-serif;font-weight:400}.mb-open-sans-600{font-family:Open Sans,sans-serif;font-weight:600}.mb-open-sans-700{font-family:Open Sans,sans-serif;font-weight:700}.mb-df{display:-ms-flexbox;display:flex}.mb-fd-c{-ms-flex-direction:column;flex-direction:column}.mb-jc-c{-ms-flex-pack:center;justify-content:center}.mb-jc-sa{-ms-flex-pack:distribute;justify-content:space-around}.mb-jc-sb{-ms-flex-pack:justify;justify-content:space-between}.mb-ai-c{-ms-flex-align:center;align-items:center}.mb-ai-fe{-ms-flex-align:end;align-items:flex-end}.mb-uppercase{text-transform:uppercase}.mb-primary{background:#2c2c2c}.mb-secondary{background:#363636}.mb-red{color:#e77173}.mb-green{color:#78d46f}.mb-white{color:#fff}.mb-primary-text{color:#aaa}.mb-secondary-text{color:#919191}.mb-black-text{color:#2c2c2c}

/*! normalize.css v4.1.1 | MIT License | github.com/necolas/normalize.css */html{font-family:sans-serif;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}article,aside,details,figcaption,figure,footer,header,main,menu,nav,section,summary{display:block}audio,canvas,progress,video{display:inline-block}audio:not([controls]){display:none;height:0}progress{vertical-align:baseline}[hidden],template{display:none}a{background-color:transparent;-webkit-text-decoration-skip:objects}a:active,a:hover{outline-width:0}abbr[title]{border-bottom:none;text-decoration:underline;text-decoration:underline dotted}b,strong{font-weight:inherit;font-weight:bolder}dfn{font-style:italic}h1{font-size:2em;margin:.67em 0}mark{background-color:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none}svg:not(:root){overflow:hidden}code,kbd,pre,samp{font-family:monospace,monospace;font-size:1em}figure{margin:1em 40px}hr{box-sizing:content-box;height:0;overflow:visible}button,input,select,textarea{font:inherit;margin:0}optgroup{font-weight:700}button,input{overflow:visible}button,select{text-transform:none}[type=reset],[type=submit],button,html [type=button]{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}fieldset{border:1px solid silver;margin:0 2px;padding:.35em .625em .75em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}textarea{overflow:auto}[type=checkbox],[type=radio]{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-cancel-button,[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-input-placeholder{color:inherit;opacity:.54}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}.logo{margin:-58px 0 0 -100px;position:absolute;top:50%;left:50%}nav{height:60px;width:100%;-ms-flex-align:center;align-items:center;-ms-flex-pack:justify;justify-content:space-between;padding:0 30px;position:fixed;z-index:1}nav .mb-nav-logo-separator{margin-left:10px;margin-right:10px}nav .mb-nav-currency{font-size:11px}nav .mb-nav-currency .mb-nav-currency-amount{margin-left:10px}nav .mb-nav-currency .mb-nav-currency-separator{margin-left:40px;margin-right:40px}nav .mb-nav-currency i{font-size:10px;margin-left:5px}nav .mb-nav-option a{height:30px;padding:0 15px;line-height:30px;font-size:11px;display:inline-block;letter-spacing:1.5px}nav .mb-nav-option a:first-child{margin-right:1px;border-top-left-radius:25px;border-bottom-left-radius:25px}nav .mb-nav-option a:last-child{margin-left:1px;border-top-right-radius:25px;border-bottom-right-radius:25px}nav .mb-nav-avatar{-ms-flex-align:center;align-items:center}nav .mb-nav-avatar .mb-nav-avatar-p{margin-right:20px}nav .mb-nav-avatar .mb-nav-avatar-img{width:40px;height:40px;border-radius:50%}aside{max-width:200px;height:100vh;width:100%;position:fixed}aside .mb-aside{padding-top:130px}aside .mb-aside a{height:110px;position:relative}aside .mb-aside a.mb-aside-active{background:#2c2c2c}aside .mb-aside a.mb-aside-active:after{content:"";position:absolute;width:14px;height:14px;background:#fff;right:-7px;transform:rotate(45deg)}aside .mb-aside a.mb-aside-active i,aside .mb-aside a.mb-aside-active p{color:#fff}aside .mb-aside a i{font-size:30px;margin-bottom:10px}aside .mb-aside a p{font-size:13px;letter-spacing:.7px}main{width:100%;padding-left:200px;padding-top:60px;padding-bottom:50px;height:100%;background:#f3f3f3}main section.mb-section-cards{height:100%;width:100%;padding:50px 40px 0}main section.mb-section-cards .mb-card{width:340px;height:210px;background-color:#161616;box-shadow:inset 0 200px 100px -100px #535353;transition:box-shadow .5s;border-radius:20px;padding:20px;margin-right:40px;cursor:pointer}main section.mb-section-cards .mb-card .mb-card-amount{font-size:35px}main section.mb-section-cards .mb-card .mb-card-currency{margin-left:15px}main section.mb-section-cards .mb-card .mb-card-number{font-size:25px;letter-spacing:2px}main section.mb-section-cards .mb-card .mb-card-date{font-size:20px}main section.mb-section-cards .mb-card .mb-card-brand i{font-size:40px}main section.mb-section-cards .mb-card:hover{background-color:#0f0c29;box-shadow:inset 0 200px 100px -100px #5151b3}main section.mb-section-cards .mb-card:hover .mb-card-brand,main section.mb-section-cards .mb-card:hover .mb-card-brand i,main section.mb-section-cards .mb-card:hover .mb-card-date,main section.mb-section-cards .mb-card:hover .mb-card-date i,main section.mb-section-cards .mb-card:hover .mb-card-number,main section.mb-section-cards .mb-card:hover .mb-card-number i{color:#fff}.mb-section-dashboard-content{width:100%;padding-left:30px;padding-right:30px}.mb-section-dashboard-content .mb-section-dashboard-content-left,.mb-section-dashboard-content .mb-section-dashboard-content-right{width:48%}.mb-section-dashboard-content .mb-section-dashboard-item{width:100%;background:#fff;margin-top:50px;border-radius:20px;padding:20px}.mb-section-dashboard-content .mb-section-dashboard-item .mb-section-dashboard-item-header{border-bottom:1px solid #e4e4e4;padding-bottom:15px;margin-bottom:15px}.mb-section-dashboard-content .mb-section-dashboard-item .mb-section-dashboard-item-header select{border:none;margin-left:15px}.mb-section-dashboard-content .mb-section-dashboard-item .mb-section-dashboard-item-history .mb-section-dashboard-item-day{font-size:18px;letter-spacing:.7px;margin-bottom:20px}.mb-section-dashboard-content .mb-section-dashboard-item .mb-section-dashboard-item-history .mb-section-dashboard-item-day-transaction{margin-bottom:25px}.mb-section-dashboard-content .mb-section-dashboard-item .mb-section-dashboard-item-history .mb-section-dashboard-item-icon{position:relative;width:40px;height:40px;border-radius:50%;margin-right:15px}.mb-section-dashboard-content .mb-section-dashboard-item .mb-section-dashboard-item-history .mb-section-dashboard-item-icon i{position:absolute;left:50%;top:50%;transform:translate(-50%,-50%);font-size:20px;color:#4b4b4b}.mb-section-dashboard-content .mb-section-dashboard-item .mb-section-dashboard-item-history .mb-section-dashboard-item-icon.mb-section-dashboard-item-icon-food{background:#a8ff78;background:linear-gradient(90deg,#78ffd6,#a8ff78)}.mb-section-dashboard-content .mb-section-dashboard-item .mb-section-dashboard-item-history .mb-section-dashboard-item-icon.mb-section-dashboard-item-icon-grocery{background:#d3cce3;background:linear-gradient(90deg,#e9e4f0,#d3cce3)}.mb-section-dashboard-content .mb-section-dashboard-item .mb-section-dashboard-item-history .mb-section-dashboard-item-icon.mb-section-dashboard-item-icon-clothes{background:#7f7fd5;background:linear-gradient(90deg,#91eae4,#86a8e7,#7f7fd5)}.mb-section-dashboard-content .mb-section-dashboard-item .mb-section-dashboard-item-history .mb-section-dashboard-item-ref .mb-section-dashboard-item-ref-card{font-size:14px}.mb-section-dashboard-content .mb-section-dashboard-item .mb-section-dashboard-item-history .mb-section-dashboard-item-amount{font-size:25px}.mb-section-dashboard-content .mb-section-dashboard-item .mb-section-dashboard-item-history .mb-section-dashboard-item-amount span{font-size:18px;margin-left:5px}@font-face{font-family:nexa-bold;src:url(../fonts/NexaBold.otf)}@font-face{font-family:nexa-light;src:url(../fonts/NexaLight.otf)}::selection{background:#333;color:#fff;text-shadow:none}::-moz-selection{background:#333;color:#fff;text-shadow:none}::-webkit-selection{background:#333;color:#fff;text-shadow:none}@media print{*{background:transparent!important;color:#000!important;box-shadow:none!important;text-shadow:none!important}a,a:visited{text-decoration:underline}a[href]:after{content:" (" attr(href) ")"}abbr[title]:after{content:" (" attr(title) ")"}.ir a:after,a[href^="#"]:after,a[href^="javascript:"]:after{content:""}blockquote,pre{border:1px solid #999;page-break-inside:avoid}thead{display:table-header-group}img,tr{page-break-inside:avoid}img{max-width:100%!important}@page{margin:.5cm}h2,h3,p{orphans:3;widows:3}h2,h3{page-break-after:avoid}}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
